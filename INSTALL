=== CorTeX server installation instructions ===

Brace yourselves, a lot of work to come...

For now, assuming you're running a Debian-based OS

0. Debian packages
sudo apt-get install gearman libfile-slurp-perl\
  mysql-server cpanminus \
  libanyevent-perl librdf-linkeddata-perl

  cpanm Mojolicious AnyEvent::Gearman Unix::Processors

I. Backends
  I.0. You would need Tomcat6 installed for OWLIM and eXist.
   (sudo apt-get install tomcat6) 

  I.1. OWLIM -- Triple store (if you're not from Jacobs University, please use Sesame or request your own OWLIM access link)
    http://download.ontotext.com/owlim/3e4dc2e0-d66c-11e1-b81b-dba586cc0cc6/owlim-lite-5.2.5331.zip

    Deploy .war file in Tomcat

  I.2. Exist -- XML Database
    http://sourceforge.net/projects/exist/files/Stable/1.2/eXist-1.2.6-rev9165.war/download 

    Deploy .war file in Tomcat

I.3 MySQL -- SQL Database
 Login as root and perform initial setup:
 $ mysql -u root -p
   create database cortex;
   grant all on cortex.* to cortex@localhost identified by 'cortex';
   Ctrl+D

 Login as cortex and initialize database:
 $ mysql -u cortex -p
   use cortex;
   drop table if exists tasks;
   create table tasks (
    taskid INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    corpus varchar(50),
    entry varchar(200),
    service varchar(50),
    status int
  );
  create index statusidx on tasks (status);
  create index corpusidx on tasks (corpus);
  create index entryidx on tasks (entry);
  create index serviceidx on tasks (service);
  Ctrl+D

II. Configure Server settings

II.1. Tomcat memory
  at /usr/share/tomcat6/bin/catalina.sh
    after the last "JAVA_OPTS=" setter, add

    JAVA_OPTS="$JAVA_OPTS -Xms3072m -Xmx3072m -XX:NewSize=512m -XX:MaxNewSize=512m
     -XX:PermSize=512m -XX:MaxPermSize=512m -XX:+DisableExplicitGC"

III. Deploying a Frontend

NOTE: If you're using morbo for development, disable the watch mechanism as the SQLite database will keep changing and the server will constantly restart.
Instead, run morbo as follows:

morbo -w /dev/null cortex-frontend

III.1. Apache + Mod_Perl and Plack

 1. Install Apache as usual
  $ sudo apt-get install apache2
 2. Install Mod_perl 
  $ sudo apt-get install libapache2-mod-perl2
 3. Install Plack
  $ sudo apt-get install libplack-perl

 4. Grant permissiosn to www-data for the webapp folder:
  $ sudo chgrp -R www-data /path/to/CorTeX
  $ sudo chmod -R g+w /path/to/CorTeX

 5. Create a "cortex" file in /etc/apache2/sites-available and /etc/apache2/sites-enabled

<VirtualHost *:80>
    ServerName cortex.example.com 
    DocumentRoot /path/to/CorTeX
    Header set Access-Control-Allow-Origin *                                    

    PerlOptions +Parent
                                                              
    <Perl>
      $ENV{PLACK_ENV} = 'production';
      $ENV{MOJO_HOME} = '/path/to/CorTeX';
    </Perl>

    <Location />
      SetHandler perl-script
      PerlHandler Plack::Handler::Apache2
      PerlSetVar psgi_app /path/to/CorTeX/cortex-frontend
    </Location>

    ErrorLog /var/log/apache2/cortex.error.log
    LogLevel warn
    CustomLog /var/log/apache2/cortex.access.log combined
</VirtualHost>
